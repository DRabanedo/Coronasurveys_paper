################################################################################################################
# Simulation based on the value of the memory factor of the reach variable, leaving the rest of parameters fixed
################################################################################################################

t = Sys.time()

#####################
## Simulation data ##
#####################

N = 10000                     # Population size
v_pop_prob =      # Probability of each subpopulation
n_pop = length(v_pop_prob)    # Number of subpopulations
n_survey = 500                # Number of individuals we draw in the survey
n_survey_hp = 50              # Number of individuals we draw in the hidden population survey 
hp_prob = 0.1                 # Proportion of individuals in the hidden population

sub_memory_factor = 0         # Subpopulation memory factor (parameter to change variance of the perturbations' normal)
visibility_factor = 1         # Visibility factor (Binomial's probability)
memory_factor = 0             #reach memory factor (parameter to change variance of the perturbations' normal)

seed = 207                    # Seed
set.seed(seed)

#Graph
dim = 1      # Graph dimension 
nei = 50     # Number of neighbors that each node is connected to. They are neighbors on each side of the node, so they are 2*nei connections
# before applying the randomization.
p   = 0.1    # Probability of randomize a connection. It is applied to all connections


###############################################################################################################################################################
# Network model #
net_model = sample_smallworld(dim, N, nei, p, loops = FALSE, multiple = FALSE)

## Populations models ##
# Not disjoint population #
Graph_population_matrix = gen_Data_uniform(N, v_pop_prob, hp_prob, visibility_factor, memory_factor, sub_memory_factor, net = net_model)

net_sw     = Graph_population_matrix[[1]]   # PopulationÂ´s graph
Population = Graph_population_matrix[[2]]   # Population
Mhp_vis    = Graph_population_matrix[[3]]   # Population's visibility matrix

# Population number
v_pop_total = getV_pop(n_pop, Population)